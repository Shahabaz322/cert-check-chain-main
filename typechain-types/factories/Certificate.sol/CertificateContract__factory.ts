/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CertificateContract,
  CertificateContractInterface,
} from "../../Certificate.sol/CertificateContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "course",
        type: "string",
      },
    ],
    name: "CertificateIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
    ],
    name: "CertificateRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certificates",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        internalType: "string",
        name: "institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dateIssued",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "getCertificate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "string",
            name: "institution",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct CertificateContract.Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getRecipientCertificates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_course",
        type: "string",
      },
      {
        internalType: "string",
        name: "_institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dateIssued",
        type: "uint256",
      },
    ],
    name: "issueCertificate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextCertificateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipientCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "revokeCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "verifyCertificate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600281905550611eb5806100686000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637843bb79116100715780637843bb791461019057806384d7a5c1146101ae5780638da5cb5b146101de578063a0bdb003146101fc578063b77160071461021a578063f2fde38b1461024a576100a9565b806306f5497e146100ae5780631692a942146100ca57806351640fee146100fa578063663b3e221461012a57806373ae389914610160575b600080fd5b6100c860048036038101906100c3919061101f565b610266565b005b6100e460048036038101906100df919061101f565b6103fc565b6040516100f19190611067565b60405180910390f35b610114600480360381019061010f919061101f565b61046e565b604051610121919061121b565b60405180910390f35b610144600480360381019061013f919061101f565b61071b565b60405161015797969594939291906112a5565b60405180910390f35b61017a60048036038101906101759190611355565b610922565b6040516101879190611395565b60405180910390f35b610198610953565b6040516101a59190611395565b60405180910390f35b6101c860048036038101906101c391906114e5565b610969565b6040516101d59190611395565b60405180910390f35b6101e6610d7a565b6040516101f391906115b4565b60405180910390f35b610204610da0565b6040516102119190611395565b60405180910390f35b610234600480360381019061022f91906115cf565b610da6565b60405161024191906116ab565b60405180910390f35b610264600480360381019061025f91906115cf565b610e3d565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed9061173f565b60405180910390fd5b80600254811061033b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610332906117ab565b60405180910390fd5b60008083815260200190815260200160002060060160009054906101000a900460ff1661039d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039490611817565b60405180910390fd5b600080600084815260200190815260200160002060060160006101000a81548160ff021916908315150217905550817fefa6c5f47ac2523bb4db18032377bf7fdce0fa9d86eddcae1ca9bba38be615d760405160405180910390a25050565b6000816002548110610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a906117ab565b60405180910390fd5b60008084815260200190815260200160002060060160009054906101000a900460ff16915050919050565b610476610f80565b8160025481106104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906117ab565b60405180910390fd5b6000808481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461054890611866565b80601f016020809104026020016040519081016040528092919081815260200182805461057490611866565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b505050505081526020016003820180546105da90611866565b80601f016020809104026020016040519081016040528092919081815260200182805461060690611866565b80156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050815260200160048201805461066c90611866565b80601f016020809104026020016040519081016040528092919081815260200182805461069890611866565b80156106e55780601f106106ba576101008083540402835291602001916106e5565b820191906000526020600020905b8154815290600101906020018083116106c857829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff161515151581525050915050919050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461076a90611866565b80601f016020809104026020016040519081016040528092919081815260200182805461079690611866565b80156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b5050505050908060030180546107f890611866565b80601f016020809104026020016040519081016040528092919081815260200182805461082490611866565b80156108715780601f1061084657610100808354040283529160200191610871565b820191906000526020600020905b81548152906001019060200180831161085457829003601f168201915b50505050509080600401805461088690611866565b80601f01602080910402602001604051908101604052809291908181526020018280546108b290611866565b80156108ff5780601f106108d4576101008083540402835291602001916108ff565b820191906000526020600020905b8154815290600101906020018083116108e257829003601f168201915b5050505050908060050154908060060160009054906101000a900460ff16905087565b6001602052816000526040600020818154811061093e57600080fd5b90600052602060002001600091509150505481565b6000600160025461096491906118c6565b905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190611946565b60405180910390fd5b6000855111610aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa5906119b2565b60405180910390fd5b6000845111610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611a1e565b60405180910390fd5b6000835111610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d90611a8a565b60405180910390fd5b60008211610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611af6565b60405180910390fd5b6000600254905060026000815480929190610b9390611b16565b91905055506040518060e001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001858152602001848152602001600115158152506000808381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610c5c9190611d0a565b506060820151816003019081610c729190611d0a565b506080820151816004019081610c889190611d0a565b5060a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550905050600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150558673ffffffffffffffffffffffffffffffffffffffff16817f8155ad64ed4454333355c45532f2f3ba06e3242f30944f6acdf9b6b989453c258888604051610d65929190611ddc565b60405180910390a38091505095945050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610e3157602002820191906000526020600020905b815481526020019060010190808311610e1d575b50505050509050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec49061173f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3390611e5f565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ffc81610fe9565b811461100757600080fd5b50565b60008135905061101981610ff3565b92915050565b60006020828403121561103557611034610fdf565b5b60006110438482850161100a565b91505092915050565b60008115159050919050565b6110618161104c565b82525050565b600060208201905061107c6000830184611058565b92915050565b61108b81610fe9565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110bc82611091565b9050919050565b6110cc816110b1565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561110c5780820151818401526020810190506110f1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611134826110d2565b61113e81856110dd565b935061114e8185602086016110ee565b61115781611118565b840191505092915050565b61116b8161104c565b82525050565b600060e0830160008301516111896000860182611082565b50602083015161119c60208601826110c3565b50604083015184820360408601526111b48282611129565b915050606083015184820360608601526111ce8282611129565b915050608083015184820360808601526111e88282611129565b91505060a08301516111fd60a0860182611082565b5060c083015161121060c0860182611162565b508091505092915050565b600060208201905081810360008301526112358184611171565b905092915050565b61124681610fe9565b82525050565b611255816110b1565b82525050565b600082825260208201905092915050565b6000611277826110d2565b611281818561125b565b93506112918185602086016110ee565b61129a81611118565b840191505092915050565b600060e0820190506112ba600083018a61123d565b6112c7602083018961124c565b81810360408301526112d9818861126c565b905081810360608301526112ed818761126c565b90508181036080830152611301818661126c565b905061131060a083018561123d565b61131d60c0830184611058565b98975050505050505050565b611332816110b1565b811461133d57600080fd5b50565b60008135905061134f81611329565b92915050565b6000806040838503121561136c5761136b610fdf565b5b600061137a85828601611340565b925050602061138b8582860161100a565b9150509250929050565b60006020820190506113aa600083018461123d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113f282611118565b810181811067ffffffffffffffff82111715611411576114106113ba565b5b80604052505050565b6000611424610fd5565b905061143082826113e9565b919050565b600067ffffffffffffffff8211156114505761144f6113ba565b5b61145982611118565b9050602081019050919050565b82818337600083830152505050565b600061148861148384611435565b61141a565b9050828152602081018484840111156114a4576114a36113b5565b5b6114af848285611466565b509392505050565b600082601f8301126114cc576114cb6113b0565b5b81356114dc848260208601611475565b91505092915050565b600080600080600060a0868803121561150157611500610fdf565b5b600061150f88828901611340565b955050602086013567ffffffffffffffff8111156115305761152f610fe4565b5b61153c888289016114b7565b945050604086013567ffffffffffffffff81111561155d5761155c610fe4565b5b611569888289016114b7565b935050606086013567ffffffffffffffff81111561158a57611589610fe4565b5b611596888289016114b7565b92505060806115a78882890161100a565b9150509295509295909350565b60006020820190506115c9600083018461124c565b92915050565b6000602082840312156115e5576115e4610fdf565b5b60006115f384828501611340565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006116348383611082565b60208301905092915050565b6000602082019050919050565b6000611658826115fc565b6116628185611607565b935061166d83611618565b8060005b8381101561169e5781516116858882611628565b975061169083611640565b925050600181019050611671565b5085935050505092915050565b600060208201905081810360008301526116c5818461164d565b905092915050565b7f4f6e6c79206f776e65722063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b600061172960228361125b565b9150611734826116cd565b604082019050919050565b600060208201905081810360008301526117588161171c565b9050919050565b7f436572746966696361746520646f6573206e6f74206578697374000000000000600082015250565b6000611795601a8361125b565b91506117a08261175f565b602082019050919050565b600060208201905081810360008301526117c481611788565b9050919050565b7f436572746966696361746520616c7265616479207265766f6b65640000000000600082015250565b6000611801601b8361125b565b915061180c826117cb565b602082019050919050565b60006020820190508181036000830152611830816117f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061187e57607f821691505b60208210810361189157611890611837565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118d182610fe9565b91506118dc83610fe9565b92508282039050818111156118f4576118f3611897565b5b92915050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b600061193060198361125b565b915061193b826118fa565b602082019050919050565b6000602082019050818103600083015261195f81611923565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b600061199c60148361125b565b91506119a782611966565b602082019050919050565b600060208201905081810360008301526119cb8161198f565b9050919050565b7f436f757273652063616e6e6f7420626520656d70747900000000000000000000600082015250565b6000611a0860168361125b565b9150611a13826119d2565b602082019050919050565b60006020820190508181036000830152611a37816119fb565b9050919050565b7f496e737469747574696f6e2063616e6e6f7420626520656d7074790000000000600082015250565b6000611a74601b8361125b565b9150611a7f82611a3e565b602082019050919050565b60006020820190508181036000830152611aa381611a67565b9050919050565b7f496e76616c696420646174650000000000000000000000000000000000000000600082015250565b6000611ae0600c8361125b565b9150611aeb82611aaa565b602082019050919050565b60006020820190508181036000830152611b0f81611ad3565b9050919050565b6000611b2182610fe9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b5357611b52611897565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611bc07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b83565b611bca8683611b83565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c07611c02611bfd84610fe9565b611be2565b610fe9565b9050919050565b6000819050919050565b611c2183611bec565b611c35611c2d82611c0e565b848454611b90565b825550505050565b600090565b611c4a611c3d565b611c55818484611c18565b505050565b5b81811015611c7957611c6e600082611c42565b600181019050611c5b565b5050565b601f821115611cbe57611c8f81611b5e565b611c9884611b73565b81016020851015611ca7578190505b611cbb611cb385611b73565b830182611c5a565b50505b505050565b600082821c905092915050565b6000611ce160001984600802611cc3565b1980831691505092915050565b6000611cfa8383611cd0565b9150826002028217905092915050565b611d13826110d2565b67ffffffffffffffff811115611d2c57611d2b6113ba565b5b611d368254611866565b611d41828285611c7d565b600060209050601f831160018114611d745760008415611d62578287015190505b611d6c8582611cee565b865550611dd4565b601f198416611d8286611b5e565b60005b82811015611daa57848901518255600182019150602085019450602081019050611d85565b86831015611dc75784890151611dc3601f891682611cd0565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611df6818561126c565b90508181036020830152611e0a818461126c565b90509392505050565b7f496e76616c6964206e6577206f776e6572206164647265737300000000000000600082015250565b6000611e4960198361125b565b9150611e5482611e13565b602082019050919050565b60006020820190508181036000830152611e7881611e3c565b905091905056fea264697066735822122053e71c4a096c8d8f1971d2cce555c01e074d9aa918e7d09c5d4afe64a6f7172b64736f6c634300081c0033";

type CertificateContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateContract__factory extends ContractFactory {
  constructor(...args: CertificateContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CertificateContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CertificateContract__factory {
    return super.connect(runner) as CertificateContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateContractInterface {
    return new Interface(_abi) as CertificateContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CertificateContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CertificateContract;
  }
}
