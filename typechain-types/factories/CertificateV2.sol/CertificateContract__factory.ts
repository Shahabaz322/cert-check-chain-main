/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CertificateContract,
  CertificateContractInterface,
} from "../../CertificateV2.sol/CertificateContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "rollNumber",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "CertificateClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "rollNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
    ],
    name: "CertificateIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
    ],
    name: "CertificateRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certificates",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "rollNumber",
        type: "string",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        internalType: "string",
        name: "institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dateIssued",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rollNumber",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "claimCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "getCertificate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "rollNumber",
            type: "string",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "string",
            name: "institution",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
        ],
        internalType: "struct CertificateContract.Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "getCertificateByHash",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "rollNumber",
            type: "string",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "string",
            name: "institution",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
        ],
        internalType: "struct CertificateContract.Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getRecipientCertificates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rollNumber",
        type: "string",
      },
    ],
    name: "getRollNumberCertificates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rollNumber",
        type: "string",
      },
    ],
    name: "hasRollNumber",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hashToCertificateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rollNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_course",
        type: "string",
      },
      {
        internalType: "string",
        name: "_institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dateIssued",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "issueCertificate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextCertificateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipientCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "revokeCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rollNumberCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "rollNumberExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "verifyCertificate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "verifyCertificateByHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_rollNumber",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "verifyCertificateByRollNumber",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234602c57600680546001600160a01b0319163317905560016005556119b490816100328239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063040ad4e41461126557806306f5497e146112f45780631692a942146112b357806336140f491461126557806343b8c2931461122757806351640fee146111dc578063663b3e22146110e75780636b50a86f146107b15780636c52ee481461076a578063706ee41f146106d057806373ae3899146106775780637843bb7914610636578063843f0ab81461060a5780638da5cb5b146105e157806390ab95cb146104bd578063a0bdb0031461049f578063b771600714610418578063dbcfd1e2146103f0578063ee35be59146101935763f2fde38b146100f857600080fd5b3461018e57602036600319011261018e576101116116d1565b60065490610129336001600160a01b038416146116e7565b6001600160a01b0316908115610149576001600160a01b03191617600655005b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e6577206f776e65722061646472657373000000000000006044820152606490fd5b600080fd5b3461018e576101a136611638565b6101ae600554821061173e565b80600052600060205260406000206001810160405160208101918160008254926101d78461155a565b93600181169081156103d25750600114610390575b50610200925003601f1981018352826113e5565b519020604051602081019061023160208288516102208187858d0161145c565b81010301601f1981018352826113e5565b5190200361034b57600981019060ff8254166103065760ff600782015416156102c157600290810180546001600160a01b03191633908117909155825460ff191660011790925560009182526020526040902061028f9082906118f3565b610299339261192d565b907fc848d2f76e3ad66932a4e1ff5ef0fbb47135d3432bfa776fa0aa55adbcf65dc2600080a4005b60405162461bcd60e51b815260206004820152601860248201527f4365727469666963617465206973206e6f742076616c696400000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f436572746966696361746520616c726561647920636c61696d656400000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f526f6c6c206e756d62657220646f65736e2774206d61746368000000000000006044820152606490fd5b9150506000528160206000206000905b8382106103b8575050602061020092820101886101ec565b6020919250806001915483858801015201910183916103a0565b60ff19168752506102009380151502830160200191508990506101ec565b3461018e57602036600319011261018e57602061040e60043561194d565b6040519015158152f35b3461018e57602036600319011261018e576001600160a01b036104396116d1565b166000526002602052604060002060405190816020825491828152019160005260206000209060005b8181106104895761048585610479818703826113e5565b60405191829182611697565b0390f35b8254845260209093019260019283019201610462565b3461018e57600036600319011261018e576020600554604051908152f35b3461018e57602036600319011261018e576104d66118a5565b50600435600052600360205260406000205480156105a4576000526000602052610485604060002060ff60096040519261050f846113c9565b8054845261051f60018201611594565b602085015260028101546001600160a01b0316604085015261054360038201611594565b606085015261055460048201611594565b608085015261056560058201611594565b60a0850152600681015460c085015282600782015416151560e085015260088101546101008501520154161515610120820152604051918291826114a4565b60405162461bcd60e51b815260206004820152601560248201527410d95c9d1a599a58d85d19481b9bdd08199bdd5b99605a1b6044820152606490fd5b3461018e57600036600319011261018e576006546040516001600160a01b039091168152602090f35b3461018e57602036600319011261018e5760043560005260036020526020604060002054604051908152f35b3461018e57600036600319011261018e57600554600019810190811161066157602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b3461018e57604036600319011261018e576106906116d1565b6001600160a01b031660009081526002602052604090208054602435919082101561018e576020916106c191611669565b90549060031b1c604051908152f35b3461018e57602036600319011261018e576004356001600160401b03811161018e576020610705610718923690600401611406565b816040519382858094519384920161145c565b8101600181520301902060405190816020825491828152019160005260206000209060005b8181106107545761048585610479818703826113e5565b825484526020909301926001928301920161073d565b3461018e57602061079261077d36611638565b9290816040519382858094519384920161145c565b81016001815203019020805482101561018e576020916106c191611669565b3461018e5760c036600319011261018e576004356001600160401b03811161018e576107e1903690600401611406565b6024356001600160401b03811161018e57610800903690600401611406565b906044356001600160401b03811161018e57610820903690600401611406565b6064356001600160401b03811161018e5761083f903690600401611406565b916084359261085960018060a01b036006541633146116e7565b8151156110a2578451156110665782511561102857805115610fe3578315610faf5760a43515610f725760a4356000526003602052604060002054610f1b576005549360001985146106615760018501600555604051906108b9826113c9565b8582526020820192848452604083016000815260608401898152608085019188835260a0860193845260c08601948552600160e087015260a4356101008701526000610120870152896000526000602052604060002096865188556001880190518051906001600160401b038211610cbc578190610937845461155a565b601f8111610ec8575b50602090601f8311600114610e6357600092610e58575b50508160011b916000199060031b1c19161790555b516002870180546001600160a01b0319166001600160a01b039290921691909117905551805160038701916001600160401b038211610cbc5781906109b1845461155a565b601f8111610e05575b50602090601f8311600114610da057600092610d95575b50508160011b916000199060031b1c19161790555b51805160048601916001600160401b038211610cbc578190610a08845461155a565b601f8111610d42575b50602090601f8311600114610cdd57600092610cd2575b50508160011b916000199060031b1c19161790555b518051906001600160401b038211610cbc57610a5c600586015461155a565b601f8111610c71575b50918795939160209995938a90601f8311600114610bc957946009610120610bab96610b899686610b9e9b97610b1f977f48286231456a063da491475ef7dbb88967abc5fe30df7f6d2860828bd8db96ca9e9c600092610bbe575b50508160011b916000199060031b1c19161760058601555b516006850155610afd60e08201511515600786019060ff801983541691151516179055565b61010081015160088501550151151591019060ff801983541691151516179055565b610b6f8a604051610b4d8a855192848181890195610b3e81838961145c565b810160018152030190206118f3565b60a435600052600382528960406000205560405180938192865192839161145c565b81016004815203019020600160ff1982541617905561192d565b9560405193849360608552606085019061147f565b908382038a85015261147f565b60a43560408301520390a3604051908152f35b015190503880610ac0565b9060058601600052806000209160005b601f1985168110610c575750610120610bab96610b8996600187610b1f977f48286231456a063da491475ef7dbb88967abc5fe30df7f6d2860828bd8db96ca9e9c97600997610b9e9f9b601f19811610610c3e575b505050811b016005860155610ad8565b015160001960f88460031b161c19169055388080610c2e565b8183015184558c9a50600190930192918d01918d01610bd9565b600586016000526020600020601f840160051c81019160208510610cb2575b601f0160051c01905b818110610ca65750610a65565b60008155600101610c99565b9091508190610c90565b634e487b7160e01b600052604160045260246000fd5b015190508b80610a28565b60008581528281209350601f198516905b818110610d2a5750908460019594939210610d11575b505050811b019055610a3d565b015160001960f88460031b161c191690558b8080610d04565b92936020600181928786015181550195019301610cee565b909150836000526020600020601f840160051c81019160208510610d8b575b90601f859493920160051c01905b818110610d7c5750610a11565b60008155849350600101610d6f565b9091508190610d61565b015190508c806109d1565b60008581528281209350601f198516905b818110610ded5750908460019594939210610dd4575b505050811b0190556109e6565b015160001960f88460031b161c191690558c8080610dc7565b92936020600181928786015181550195019301610db1565b909150836000526020600020601f840160051c81019160208510610e4e575b90601f859493920160051c01905b818110610e3f57506109ba565b60008155849350600101610e32565b9091508190610e24565b015190508e80610957565b60008581528281209350601f198516905b818110610eb05750908460019594939210610e97575b505050811b01905561096c565b015160001960f88460031b161c191690558e8080610e8a565b92936020600181928786015181550195019301610e74565b909150836000526020600020601f840160051c81019160208510610f11575b90601f859493920160051c01905b818110610f025750610940565b60008155849350600101610ef5565b9091508190610ee7565b60405162461bcd60e51b815260206004820152602960248201527f436572746966696361746520776974682074686973206861736820616c72656160448201526864792065786973747360b81b6064820152608490fd5b60405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840c8dec6eadacadce840d0c2e6d605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206461746560a01b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f496e737469747574696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275436f757273652063616e6e6f7420626520656d70747960501b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f526f6c6c206e756d6265722063616e6e6f7420626520656d70747900000000006044820152606490fd5b3461018e57602036600319011261018e576004356000526000602052610140604060002080549061111a60018201611594565b60028201546001600160a01b03169161113560038201611594565b6111bd61114460048401611594565b6111af61115360058601611594565b916111a160068701549860ff6007890154169661118e60ff600960088c01549b0154169a6040519e8f9e8f908152816020820152019061147f565b9160408d01528b820360608d015261147f565b9089820360808b015261147f565b9087820360a089015261147f565b9360c0860152151560e085015261010084015215156101208301520390f35b3461018e57602036600319011261018e576004356111f86118a5565b50611206600554821061173e565b6000526000602052610485604060002060ff60096040519261050f846113c9565b3461018e57604036600319011261018e576004356001600160401b03811161018e5761040e61125c6020923690600401611406565b6024359061178a565b3461018e57602036600319011261018e576004356001600160401b03811161018e5760ff61129d602061070581943690600401611406565b8101600481520301902054166040519015158152f35b3461018e57602036600319011261018e576004356112d4600554821061173e565b6000526000602052602060ff600760406000200154166040519015158152f35b3461018e57602036600319011261018e5760043561131d60018060a01b036006541633146116e7565b61132a600554821061173e565b80600052600060205260ff600760406000200154161561138457806000526000602052600760406000200160ff1981541690557fefa6c5f47ac2523bb4db18032377bf7fdce0fa9d86eddcae1ca9bba38be615d7600080a2005b60405162461bcd60e51b815260206004820152601b60248201527f436572746966696361746520616c7265616479207265766f6b656400000000006044820152606490fd5b61014081019081106001600160401b03821117610cbc57604052565b90601f801991011681019081106001600160401b03821117610cbc57604052565b81601f8201121561018e578035906001600160401b038211610cbc576040519261143a601f8401601f1916602001856113e5565b8284526020838301011161018e57816000926020809301838601378301015290565b60005b83811061146f5750506000910152565b818101518382015260200161145f565b906020916114988151809281855285808601910161145c565b601f01601f1916010190565b602081528151602082015261014061012061152e6115186115026114d7602088015186604089015261016088019061147f565b60408801516001600160a01b0316606088810191909152880151878203601f1901608089015261147f565b6080870151868203601f190160a088015261147f565b60a0860151858203601f190160c087015261147f565b9360c081015160e085015260e08101511515610100850152610100810151828501520151151591015290565b90600182811c9216801561158a575b602083101461157457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611569565b90604051918260008254926115a88461155a565b808452936001811690811561161657506001146115cf575b506115cd925003836113e5565b565b90506000929192526020600020906000915b8183106115fa5750509060206115cd92820101386115c0565b60209193508060019154838589010152019101909184926115e1565b9050602092506115cd94915060ff191682840152151560051b820101386115c0565b604060031982011261018e57600435906001600160401b03821161018e5761166291600401611406565b9060243590565b80548210156116815760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b602060408183019282815284518094520192019060005b8181106116bb5750505090565b82518452602093840193909201916001016116ae565b600435906001600160a01b038216820361018e57565b156116ee57565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e20706572666f726d2074686973206163746960448201526137b760f11b6064820152608490fd5b1561174557565b60405162461bcd60e51b815260206004820152601a60248201527f436572746966696361746520646f6573206e6f742065786973740000000000006044820152606490fd5b906000526003602052604060002054801561189e5760005260006020526040600020906040516117b9816113c9565b825481526117c960018401611594565b6020820190815260028401546001600160a01b03166040830152906117f060038501611594565b606082015261180160048501611594565b608082015261181260058501611594565b60a0820152600684015460c082015261012060ff6009816007880154161515968760e0860152600881015461010086015201541615159101528261185557505090565b9091505160405161187660208281610220818301968781519384920161145c565b5190209060405161189760208281610220818301968781519384920161145c565b5190201490565b5050600090565b604051906118b2826113c9565b6000610120838281526060602082015282604082015260608082015260606080820152606060a08201528260c08201528260e0820152826101008201520152565b805468010000000000000000811015610cbc5761191591600182018155611669565b819291549060031b91821b91600019901b1916179055565b6119459060206040519282848094519384920161145c565b810103902090565b6000526003602052604060002054801561197857600052600060205260ff6007604060002001541690565b5060009056fea2646970667358221220836e2feccb5d81a05d28b1663830541c7ff2e926138b744f5e092fdd4ff8fbaa64736f6c634300081c0033";

type CertificateContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateContract__factory extends ContractFactory {
  constructor(...args: CertificateContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CertificateContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CertificateContract__factory {
    return super.connect(runner) as CertificateContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateContractInterface {
    return new Interface(_abi) as CertificateContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CertificateContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CertificateContract;
  }
}
