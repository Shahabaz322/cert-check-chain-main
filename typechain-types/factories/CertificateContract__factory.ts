/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CertificateContract,
  CertificateContractInterface,
} from "../CertificateContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
    ],
    name: "CertificateIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
    ],
    name: "CertificateRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certificates",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        internalType: "string",
        name: "institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dateIssued",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "getCertificate",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "string",
            name: "institution",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
        ],
        internalType: "struct CertificateContract.Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getRecipientCertificates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "isIssued",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_course",
        type: "string",
      },
      {
        internalType: "string",
        name: "_institution",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_dateIssued",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "issueCertificate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextCertificateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipientCertificates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "revokeCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "verifyCertificate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600281905550612061806100686000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637843bb79116100715780637843bb79146101cc5780638da5cb5b146101ea578063a0bdb00314610208578063b771600714610226578063e376e3ed14610256578063f2fde38b14610286576100b4565b806306f5497e146100b9578063163aa631146100d55780631692a9421461010557806351640fee14610135578063663b3e221461016557806373ae38991461019c575b600080fd5b6100d360048036038101906100ce9190611107565b6102a2565b005b6100ef60048036038101906100ea919061116a565b610438565b6040516100fc91906111b2565b60405180910390f35b61011f600480360381019061011a9190611107565b6104b4565b60405161012c91906111b2565b60405180910390f35b61014f600480360381019061014a9190611107565b610526565b60405161015c9190611389565b60405180910390f35b61017f600480360381019061017a9190611107565b6107de565b604051610193989796959493929190611422565b60405180910390f35b6101b660048036038101906101b191906114e1565b6109eb565b6040516101c39190611521565b60405180910390f35b6101d4610a1c565b6040516101e19190611521565b60405180910390f35b6101f2610a32565b6040516101ff919061153c565b60405180910390f35b610210610a58565b60405161021d9190611521565b60405180910390f35b610240600480360381019061023b9190611557565b610a5e565b60405161024d9190611633565b60405180910390f35b610270600480360381019061026b919061178a565b610af5565b60405161027d9190611521565b60405180910390f35b6102a0600480360381019061029b9190611557565b610f1a565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610332576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610329906118dd565b60405180910390fd5b806002548110610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90611949565b60405180910390fd5b60008083815260200190815260200160002060060160009054906101000a900460ff166103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d0906119b5565b60405180910390fd5b600080600084815260200190815260200160002060060160006101000a81548160ff021916908315150217905550817fefa6c5f47ac2523bb4db18032377bf7fdce0fa9d86eddcae1ca9bba38be615d760405160405180910390a25050565b600080600190505b6002548110156104a957826000808381526020019081526020016000206007015414801561048d575060008082815260200190815260200160002060060160009054906101000a900460ff165b1561049c5760019150506104af565b8080600101915050610440565b50600090505b919050565b60008160025481106104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611949565b60405180910390fd5b60008084815260200190815260200160002060060160009054906101000a900460ff16915050919050565b61052e61105d565b816002548110610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90611949565b60405180910390fd5b60008084815260200190815260200160002060405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461060190611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461062d90611a04565b801561067a5780601f1061064f5761010080835404028352916020019161067a565b820191906000526020600020905b81548152906001019060200180831161065d57829003601f168201915b5050505050815260200160038201805461069390611a04565b80601f01602080910402602001604051908101604052809291908181526020018280546106bf90611a04565b801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b5050505050815260200160048201805461072590611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461075190611a04565b801561079e5780601f106107735761010080835404028352916020019161079e565b820191906000526020600020905b81548152906001019060200180831161078157829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff16151515158152602001600782015481525050915050919050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461082d90611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461085990611a04565b80156108a65780601f1061087b576101008083540402835291602001916108a6565b820191906000526020600020905b81548152906001019060200180831161088957829003601f168201915b5050505050908060030180546108bb90611a04565b80601f01602080910402602001604051908101604052809291908181526020018280546108e790611a04565b80156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b50505050509080600401805461094990611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461097590611a04565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050908060050154908060060160009054906101000a900460ff16908060070154905088565b60016020528160005260406000208181548110610a0757600080fd5b90600052602060002001600091509150505481565b60006001600254610a2d9190611a64565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ae957602002820191906000526020600020905b815481526020019060010190808311610ad5575b50505050509050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e906118dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed90611ae4565b60405180910390fd5b6000865111610c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3190611b50565b60405180910390fd5b6000855111610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7590611bbc565b60405180910390fd5b6000845111610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb990611c28565b60405180910390fd5b60008311610d05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfc90611c94565b60405180910390fd5b6000600254905060026000815480929190610d1f90611cb4565b91905055506040518061010001604052808281526020018973ffffffffffffffffffffffffffffffffffffffff168152602001888152602001878152602001868152602001858152602001600115158152602001848152506000808381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610def9190611ea8565b506060820151816003019081610e059190611ea8565b506080820151816004019081610e1b9190611ea8565b5060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160070155905050600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150558773ffffffffffffffffffffffffffffffffffffffff16817fc2a6f1a20e714923a95363dd86c03c010d118e0aeea808424a9bdd036130e0bc898987604051610f0493929190611f7a565b60405180910390a3809150509695505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610faa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa1906118dd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611019576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110109061200b565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60405180610100016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160008152602001600015158152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110e4816110d1565b81146110ef57600080fd5b50565b600081359050611101816110db565b92915050565b60006020828403121561111d5761111c6110c7565b5b600061112b848285016110f2565b91505092915050565b6000819050919050565b61114781611134565b811461115257600080fd5b50565b6000813590506111648161113e565b92915050565b6000602082840312156111805761117f6110c7565b5b600061118e84828501611155565b91505092915050565b60008115159050919050565b6111ac81611197565b82525050565b60006020820190506111c760008301846111a3565b92915050565b6111d6816110d1565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611207826111dc565b9050919050565b611217816111fc565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561125757808201518184015260208101905061123c565b60008484015250505050565b6000601f19601f8301169050919050565b600061127f8261121d565b6112898185611228565b9350611299818560208601611239565b6112a281611263565b840191505092915050565b6112b681611197565b82525050565b6112c581611134565b82525050565b6000610100830160008301516112e460008601826111cd565b5060208301516112f7602086018261120e565b506040830151848203604086015261130f8282611274565b915050606083015184820360608601526113298282611274565b915050608083015184820360808601526113438282611274565b91505060a083015161135860a08601826111cd565b5060c083015161136b60c08601826112ad565b5060e083015161137e60e08601826112bc565b508091505092915050565b600060208201905081810360008301526113a381846112cb565b905092915050565b6113b4816110d1565b82525050565b6113c3816111fc565b82525050565b600082825260208201905092915050565b60006113e58261121d565b6113ef81856113c9565b93506113ff818560208601611239565b61140881611263565b840191505092915050565b61141c81611134565b82525050565b600061010082019050611438600083018b6113ab565b611445602083018a6113ba565b818103604083015261145781896113da565b9050818103606083015261146b81886113da565b9050818103608083015261147f81876113da565b905061148e60a08301866113ab565b61149b60c08301856111a3565b6114a860e0830184611413565b9998505050505050505050565b6114be816111fc565b81146114c957600080fd5b50565b6000813590506114db816114b5565b92915050565b600080604083850312156114f8576114f76110c7565b5b6000611506858286016114cc565b9250506020611517858286016110f2565b9150509250929050565b600060208201905061153660008301846113ab565b92915050565b600060208201905061155160008301846113ba565b92915050565b60006020828403121561156d5761156c6110c7565b5b600061157b848285016114cc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006115bc83836111cd565b60208301905092915050565b6000602082019050919050565b60006115e082611584565b6115ea818561158f565b93506115f5836115a0565b8060005b8381101561162657815161160d88826115b0565b9750611618836115c8565b9250506001810190506115f9565b5085935050505092915050565b6000602082019050818103600083015261164d81846115d5565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61169782611263565b810181811067ffffffffffffffff821117156116b6576116b561165f565b5b80604052505050565b60006116c96110bd565b90506116d5828261168e565b919050565b600067ffffffffffffffff8211156116f5576116f461165f565b5b6116fe82611263565b9050602081019050919050565b82818337600083830152505050565b600061172d611728846116da565b6116bf565b9050828152602081018484840111156117495761174861165a565b5b61175484828561170b565b509392505050565b600082601f83011261177157611770611655565b5b813561178184826020860161171a565b91505092915050565b60008060008060008060c087890312156117a7576117a66110c7565b5b60006117b589828a016114cc565b965050602087013567ffffffffffffffff8111156117d6576117d56110cc565b5b6117e289828a0161175c565b955050604087013567ffffffffffffffff811115611803576118026110cc565b5b61180f89828a0161175c565b945050606087013567ffffffffffffffff8111156118305761182f6110cc565b5b61183c89828a0161175c565b935050608061184d89828a016110f2565b92505060a061185e89828a01611155565b9150509295509295509295565b7f4f6e6c79206f776e65722063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b60006118c76022836113c9565b91506118d28261186b565b604082019050919050565b600060208201905081810360008301526118f6816118ba565b9050919050565b7f436572746966696361746520646f6573206e6f74206578697374000000000000600082015250565b6000611933601a836113c9565b915061193e826118fd565b602082019050919050565b6000602082019050818103600083015261196281611926565b9050919050565b7f436572746966696361746520616c7265616479207265766f6b65640000000000600082015250565b600061199f601b836113c9565b91506119aa82611969565b602082019050919050565b600060208201905081810360008301526119ce81611992565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a1c57607f821691505b602082108103611a2f57611a2e6119d5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a6f826110d1565b9150611a7a836110d1565b9250828203905081811115611a9257611a91611a35565b5b92915050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b6000611ace6019836113c9565b9150611ad982611a98565b602082019050919050565b60006020820190508181036000830152611afd81611ac1565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b6000611b3a6014836113c9565b9150611b4582611b04565b602082019050919050565b60006020820190508181036000830152611b6981611b2d565b9050919050565b7f436f757273652063616e6e6f7420626520656d70747900000000000000000000600082015250565b6000611ba66016836113c9565b9150611bb182611b70565b602082019050919050565b60006020820190508181036000830152611bd581611b99565b9050919050565b7f496e737469747574696f6e2063616e6e6f7420626520656d7074790000000000600082015250565b6000611c12601b836113c9565b9150611c1d82611bdc565b602082019050919050565b60006020820190508181036000830152611c4181611c05565b9050919050565b7f496e76616c696420646174650000000000000000000000000000000000000000600082015250565b6000611c7e600c836113c9565b9150611c8982611c48565b602082019050919050565b60006020820190508181036000830152611cad81611c71565b9050919050565b6000611cbf826110d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611cf157611cf0611a35565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d5e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d21565b611d688683611d21565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611da5611da0611d9b846110d1565b611d80565b6110d1565b9050919050565b6000819050919050565b611dbf83611d8a565b611dd3611dcb82611dac565b848454611d2e565b825550505050565b600090565b611de8611ddb565b611df3818484611db6565b505050565b5b81811015611e1757611e0c600082611de0565b600181019050611df9565b5050565b601f821115611e5c57611e2d81611cfc565b611e3684611d11565b81016020851015611e45578190505b611e59611e5185611d11565b830182611df8565b50505b505050565b600082821c905092915050565b6000611e7f60001984600802611e61565b1980831691505092915050565b6000611e988383611e6e565b9150826002028217905092915050565b611eb18261121d565b67ffffffffffffffff811115611eca57611ec961165f565b5b611ed48254611a04565b611edf828285611e1b565b600060209050601f831160018114611f125760008415611f00578287015190505b611f0a8582611e8c565b865550611f72565b601f198416611f2086611cfc565b60005b82811015611f4857848901518255600182019150602085019450602081019050611f23565b86831015611f655784890151611f61601f891682611e6e565b8355505b6001600288020188555050505b505050505050565b60006060820190508181036000830152611f9481866113da565b90508181036020830152611fa881856113da565b9050611fb76040830184611413565b949350505050565b7f496e76616c6964206e6577206f776e6572206164647265737300000000000000600082015250565b6000611ff56019836113c9565b915061200082611fbf565b602082019050919050565b6000602082019050818103600083015261202481611fe8565b905091905056fea2646970667358221220b6c3f7ff61c2d46ef25c6a06f6710b13e77d59a754c105b9097c6963f62caba564736f6c634300081c0033";

type CertificateContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateContract__factory extends ContractFactory {
  constructor(...args: CertificateContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CertificateContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CertificateContract__factory {
    return super.connect(runner) as CertificateContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateContractInterface {
    return new Interface(_abi) as CertificateContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CertificateContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CertificateContract;
  }
}
